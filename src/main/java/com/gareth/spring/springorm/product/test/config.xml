<?xml version="1.0" encoding="UTF-8"?>
<beans
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd 
 http://www.springframework.org/schema/context 
 http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/tx 
 http://www.springframework.org/schema/tx/spring-tx.xsd"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans">

	<tx:jta-transaction-manager/>

	<context:component-scan base-package="com.gareth.spring.springorm.product.dao.impl"/>

	<!-- DataSource Bean(4 properties) - the bean that creates the connection -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		name="dataSource" p:driverClassName="org.postgresql.Driver"
		p:url="jdbc:postgresql://localhost:5432/mydb" p:username="bob"
		p:password="password" />

	<!-- Hibernate properties bean -->
	<bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
	  name="sessionFactory" p:dataSource-ref="dataSource">
	  	<property name="hibernateProperties">
	  		<props>
	  			<!-- Generates the sql queries from the objects we provide -->
	  			<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
	  			<!-- displays queries on console that hibernate generates on the fly  -->
	  			<prop key="hibernate.show_sql">true</prop>
	  		</props>
	  	</property>
	  	
	  	<!-- annotatedClasses bean -->
	  	<property name="annotatedClasses">
	  	<list>
	  		<value>com.gareth.spring.springorm.product.entity.Product</value>
	  	</list>
	  	</property>
	 </bean>
	 
	 <bean class="org.springframework.orm.hibernate5.HibernateTemplate" 
	 name="hibernateTemplate" p:sessionFactory-ref="sessionFactory"/>
	 
	 <bean class="org.springframework.orm.hibernate5.HibernateTransactionManager"
	 name="transactionManager" p:sessionFactory-ref="sessionFactory"/>
	 
</beans>